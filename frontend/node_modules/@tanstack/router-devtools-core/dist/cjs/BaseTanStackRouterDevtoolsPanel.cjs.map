{"version":3,"file":"BaseTanStackRouterDevtoolsPanel.cjs","sources":["../../src/BaseTanStackRouterDevtoolsPanel.tsx"],"sourcesContent":["import { clsx as cx } from 'clsx'\nimport { default as invariant } from 'tiny-invariant'\nimport { rootRouteId, trimPath } from '@tanstack/router-core'\nimport { createMemo } from 'solid-js'\nimport { useDevtoolsOnClose } from './context'\nimport { useStyles } from './useStyles'\nimport useLocalStorage from './useLocalStorage'\nimport { Explorer } from './Explorer'\nimport { getRouteStatusColor, getStatusColor, multiSortBy } from './utils'\nimport { AgeTicker } from './AgeTicker'\n// import type { DevtoolsPanelOptions } from './TanStackRouterDevtoolsPanel'\n\nimport type {\n  AnyContext,\n  AnyRoute,\n  AnyRouter,\n  FileRouteTypes,\n  MakeRouteMatchUnion,\n  Route,\n  RouterState,\n} from '@tanstack/router-core'\nimport type { Accessor, JSX } from 'solid-js'\n\nexport interface BaseDevtoolsPanelOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: Accessor<JSX.CSSProperties>\n  /**\n   * The standard React class property used to style a component with classes\n   */\n  className?: Accessor<string>\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen?: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  handleDragStart?: (e: any) => void\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router: Accessor<AnyRouter>\n  routerState: Accessor<any>\n  /**\n   * Use this to attach the devtool's styles to specific element in the DOM.\n   */\n  shadowDOMTarget?: ShadowRoot\n}\n\nfunction Logo(props: any) {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <button {...rest} class={cx(styles().logo, className ? className() : '')}>\n      <div class={styles().tanstackLogo}>TANSTACK</div>\n      <div class={styles().routerLogo}>TanStack Router v1</div>\n    </button>\n  )\n}\n\nfunction RouteComp({\n  routerState,\n  router,\n  route,\n  isRoot,\n  activeId,\n  setActiveId,\n}: {\n  routerState: Accessor<\n    RouterState<\n      Route<\n        any,\n        '/',\n        '/',\n        string,\n        '__root__',\n        undefined,\n        {},\n        {},\n        AnyContext,\n        AnyContext,\n        {},\n        undefined,\n        any,\n        FileRouteTypes\n      >,\n      MakeRouteMatchUnion\n    >\n  >\n  router: Accessor<AnyRouter>\n  route: AnyRoute\n  isRoot?: boolean\n  activeId: Accessor<string | undefined>\n  setActiveId: (id: string) => void\n}) {\n  const styles = useStyles()\n  const matches = createMemo(\n    () => routerState().pendingMatches || routerState().matches,\n  )\n  const match = createMemo(() =>\n    routerState().matches.find((d) => d.routeId === route.id),\n  )\n\n  const param = createMemo(() => {\n    try {\n      if (match()?.params) {\n        const p = match()?.params\n        const r: string = route.path || trimPath(route.id)\n        if (r.startsWith('$')) {\n          const trimmed = r.slice(1)\n\n          if (p[trimmed]) {\n            return `(${p[trimmed]})`\n          }\n        }\n      }\n      return ''\n    } catch (error) {\n      return ''\n    }\n  })\n\n  return (\n    <div>\n      <div\n        role=\"button\"\n        aria-label={`Open match details for ${route.id}`}\n        onClick={() => {\n          if (match()) {\n            setActiveId(activeId() === route.id ? '' : route.id)\n          }\n        }}\n        class={cx(\n          styles().routesRowContainer(route.id === activeId(), !!match()),\n        )}\n      >\n        <div\n          class={cx(\n            styles().matchIndicator(getRouteStatusColor(matches(), route)),\n          )}\n        />\n        <div class={cx(styles().routesRow(!!match()))}>\n          <div>\n            <code class={styles().code}>\n              {isRoot ? rootRouteId : route.path || trimPath(route.id)}{' '}\n            </code>\n            <code class={styles().routeParamInfo}>{param()}</code>\n          </div>\n          <AgeTicker match={match()} router={router} />\n        </div>\n      </div>\n      {route.children?.length ? (\n        <div class={styles().nestedRouteRow(!!isRoot)}>\n          {[...(route.children as Array<AnyRoute>)]\n            .sort((a, b) => {\n              return a.rank - b.rank\n            })\n            .map((r) => (\n              <RouteComp\n                routerState={routerState}\n                router={router}\n                route={r}\n                activeId={activeId}\n                setActiveId={setActiveId}\n              />\n            ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport const BaseTanStackRouterDevtoolsPanel =\n  function BaseTanStackRouterDevtoolsPanel({\n    ...props\n  }: BaseDevtoolsPanelOptions): JSX.Element {\n    const {\n      isOpen = true,\n      setIsOpen,\n      handleDragStart,\n      router,\n      routerState,\n      shadowDOMTarget,\n      ...panelProps\n    } = props\n\n    const { onCloseClick } = useDevtoolsOnClose()\n    const styles = useStyles()\n    const { className, style, ...otherPanelProps } = panelProps\n\n    invariant(\n      router,\n      'No router was found for the TanStack Router Devtools. Please place the devtools in the <RouterProvider> component tree or pass the router instance to the devtools manually.',\n    )\n\n    // useStore(router.__store)\n\n    const [showMatches, setShowMatches] = useLocalStorage(\n      'tanstackRouterDevtoolsShowMatches',\n      true,\n    )\n\n    const [activeId, setActiveId] = useLocalStorage(\n      'tanstackRouterDevtoolsActiveRouteId',\n      '',\n    )\n\n    const activeMatch = createMemo(() => {\n      const matches = [\n        ...(routerState().pendingMatches ?? []),\n        ...routerState().matches,\n        ...routerState().cachedMatches,\n      ]\n      return matches.find(\n        (d) => d.routeId === activeId() || d.id === activeId(),\n      )\n    })\n\n    const hasSearch = createMemo(\n      () => Object.keys(routerState().location.search).length,\n    )\n\n    const explorerState = createMemo(() => {\n      return {\n        ...router(),\n        state: routerState(),\n      }\n    })\n\n    const routerExplorerValue = createMemo(() =>\n      Object.fromEntries(\n        multiSortBy(\n          Object.keys(explorerState()),\n          (\n            [\n              'state',\n              'routesById',\n              'routesByPath',\n              'flatRoutes',\n              'options',\n              'manifest',\n            ] as const\n          ).map((d) => (dd) => dd !== d),\n        )\n          .map((key) => [key, (explorerState() as any)[key]])\n          .filter(\n            (d) =>\n              typeof d[1] !== 'function' &&\n              ![\n                '__store',\n                'basepath',\n                'injectedHtml',\n                'subscribers',\n                'latestLoadPromise',\n                'navigateTimeout',\n                'resetNextScroll',\n                'tempLocationKey',\n                'latestLocation',\n                'routeTree',\n                'history',\n              ].includes(d[0]),\n          ),\n      ),\n    )\n    const activeMatchLoaderData = createMemo(() => activeMatch()?.loaderData)\n    const activeMatchValue = createMemo(() => activeMatch())\n    const locationSearchValue = createMemo(() => routerState().location.search)\n\n    return (\n      <div\n        class={cx(\n          styles().devtoolsPanel,\n          'TanStackRouterDevtoolsPanel',\n          className ? className() : '',\n        )}\n        style={style ? style() : ''}\n        {...otherPanelProps}\n      >\n        {handleDragStart ? (\n          <div class={styles().dragHandle} onMouseDown={handleDragStart}></div>\n        ) : null}\n        <button\n          class={styles().panelCloseBtn}\n          onClick={(e: any) => {\n            if (setIsOpen) {\n              setIsOpen(false)\n            }\n            onCloseClick(e)\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"10\"\n            height=\"6\"\n            fill=\"none\"\n            viewBox=\"0 0 10 6\"\n            class={styles().panelCloseBtnIcon}\n          >\n            <path\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"1.667\"\n              d=\"M1 1l4 4 4-4\"\n            ></path>\n          </svg>\n        </button>\n        <div class={styles().firstContainer}>\n          <div class={styles().row}>\n            <Logo\n              aria-hidden\n              onClick={(e: any) => {\n                if (setIsOpen) {\n                  setIsOpen(false)\n                }\n                onCloseClick(e)\n              }}\n            />\n          </div>\n          <div class={styles().routerExplorerContainer}>\n            <div class={styles().routerExplorer}>\n              <Explorer\n                label=\"Router\"\n                value={routerExplorerValue}\n                defaultExpanded={{\n                  state: {} as any,\n                  context: {} as any,\n                  options: {} as any,\n                }}\n                filterSubEntries={(subEntries) => {\n                  return subEntries.filter(\n                    (d: any) => typeof d.value() !== 'function',\n                  )\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div class={styles().secondContainer}>\n          <div class={styles().matchesContainer}>\n            <div class={styles().detailsHeader}>\n              <span>Pathname</span>\n              {routerState().location.maskedLocation ? (\n                <div class={styles().maskedBadgeContainer}>\n                  <span class={styles().maskedBadge}>masked</span>\n                </div>\n              ) : null}\n            </div>\n            <div class={styles().detailsContent}>\n              <code>{routerState().location.pathname}</code>\n              {routerState().location.maskedLocation ? (\n                <code class={styles().maskedLocation}>\n                  {routerState().location.maskedLocation?.pathname}\n                </code>\n              ) : null}\n            </div>\n            <div class={styles().detailsHeader}>\n              <div class={styles().routeMatchesToggle}>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowMatches(false)\n                  }}\n                  disabled={!showMatches()}\n                  class={cx(\n                    styles().routeMatchesToggleBtn(!showMatches(), true),\n                  )}\n                >\n                  Routes\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowMatches(true)\n                  }}\n                  disabled={showMatches()}\n                  class={cx(\n                    styles().routeMatchesToggleBtn(!!showMatches(), false),\n                  )}\n                >\n                  Matches\n                </button>\n              </div>\n              <div class={styles().detailsHeaderInfo}>\n                <div>age / staleTime / gcTime</div>\n              </div>\n            </div>\n            <div class={cx(styles().routesContainer)}>\n              {!showMatches() ? (\n                <RouteComp\n                  routerState={routerState}\n                  router={router}\n                  route={router().routeTree}\n                  isRoot\n                  activeId={activeId}\n                  setActiveId={setActiveId}\n                />\n              ) : (\n                <div>\n                  {(routerState().pendingMatches?.length\n                    ? routerState().pendingMatches\n                    : routerState().matches\n                  )?.map((match: any, i: any) => {\n                    return (\n                      <div\n                        role=\"button\"\n                        aria-label={`Open match details for ${match.id}`}\n                        onClick={() =>\n                          setActiveId(activeId() === match.id ? '' : match.id)\n                        }\n                        class={cx(styles().matchRow(match === activeMatch()))}\n                      >\n                        <div\n                          class={cx(\n                            styles().matchIndicator(getStatusColor(match)),\n                          )}\n                        />\n\n                        <code\n                          class={styles().matchID}\n                        >{`${match.routeId === rootRouteId ? rootRouteId : match.pathname}`}</code>\n                        <AgeTicker match={match} router={router} />\n                      </div>\n                    )\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n          {routerState().cachedMatches.length ? (\n            <div class={styles().cachedMatchesContainer}>\n              <div class={styles().detailsHeader}>\n                <div>Cached Matches</div>\n                <div class={styles().detailsHeaderInfo}>\n                  age / staleTime / gcTime\n                </div>\n              </div>\n              <div>\n                {routerState().cachedMatches.map((match: any) => {\n                  return (\n                    <div\n                      role=\"button\"\n                      aria-label={`Open match details for ${match.id}`}\n                      onClick={() =>\n                        setActiveId(activeId() === match.id ? '' : match.id)\n                      }\n                      class={cx(styles().matchRow(match === activeMatch()))}\n                    >\n                      <div\n                        class={cx(\n                          styles().matchIndicator(getStatusColor(match)),\n                        )}\n                      />\n\n                      <code class={styles().matchID}>{`${match.id}`}</code>\n\n                      <AgeTicker match={match} router={router} />\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {activeMatch() && activeMatch()?.status ? (\n          <div class={styles().thirdContainer}>\n            <div class={styles().detailsHeader}>Match Details</div>\n            <div>\n              <div class={styles().matchDetails}>\n                <div\n                  class={styles().matchStatus(\n                    activeMatch()?.status,\n                    activeMatch()?.isFetching,\n                  )}\n                >\n                  <div>\n                    {activeMatch()?.status === 'success' &&\n                    activeMatch()?.isFetching\n                      ? 'fetching'\n                      : activeMatch()?.status}\n                  </div>\n                </div>\n                <div class={styles().matchDetailsInfoLabel}>\n                  <div>ID:</div>\n                  <div class={styles().matchDetailsInfo}>\n                    <code>{activeMatch()?.id}</code>\n                  </div>\n                </div>\n                <div class={styles().matchDetailsInfoLabel}>\n                  <div>State:</div>\n                  <div class={styles().matchDetailsInfo}>\n                    {routerState().pendingMatches?.find(\n                      (d: any) => d.id === activeMatch()?.id,\n                    )\n                      ? 'Pending'\n                      : routerState().matches.find(\n                            (d: any) => d.id === activeMatch()?.id,\n                          )\n                        ? 'Active'\n                        : 'Cached'}\n                  </div>\n                </div>\n                <div class={styles().matchDetailsInfoLabel}>\n                  <div>Last Updated:</div>\n                  <div class={styles().matchDetailsInfo}>\n                    {activeMatch()?.updatedAt\n                      ? new Date(activeMatch()?.updatedAt).toLocaleTimeString()\n                      : 'N/A'}\n                  </div>\n                </div>\n              </div>\n            </div>\n            {activeMatchLoaderData() ? (\n              <>\n                <div class={styles().detailsHeader}>Loader Data</div>\n                <div class={styles().detailsContent}>\n                  <Explorer\n                    label=\"loaderData\"\n                    value={activeMatchLoaderData}\n                    defaultExpanded={{}}\n                  />\n                </div>\n              </>\n            ) : null}\n            <div class={styles().detailsHeader}>Explorer</div>\n            <div class={styles().detailsContent}>\n              <Explorer\n                label=\"Match\"\n                value={activeMatchValue}\n                defaultExpanded={{}}\n              />\n            </div>\n          </div>\n        ) : null}\n        {hasSearch() ? (\n          <div class={styles().fourthContainer}>\n            <div class={styles().detailsHeader}>Search Params</div>\n            <div class={styles().detailsContent}>\n              <Explorer\n                value={locationSearchValue}\n                defaultExpanded={Object.keys(\n                  routerState().location.search,\n                ).reduce((obj: any, next) => {\n                  obj[next] = {}\n                  return obj\n                }, {})}\n              />\n            </div>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\nexport default BaseTanStackRouterDevtoolsPanel\n"],"names":["Logo","props","className","rest","styles","useStyles","_el$","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_$mergeProps","cx","logo","_$effect","_p$","_v$","tanstackLogo","_v$2","routerLogo","e","_$className","t","undefined","RouteComp","routerState","router","route","isRoot","activeId","setActiveId","matches","createMemo","pendingMatches","match","find","d","routeId","id","param","params","p","r","path","trimPath","startsWith","trimmed","slice","error","_el$4","_tmpl$2","_el$5","_el$6","_el$7","_el$8","_el$9","_el$10","_el$11","$$click","rootRouteId","_$insert","_$createComponent","AgeTicker","_c$","_$memo","children","length","_el$12","_tmpl$3","sort","a","b","rank","map","nestedRouteRow","_v$3","_v$4","routesRowContainer","_v$5","matchIndicator","getRouteStatusColor","_v$6","routesRow","_v$7","code","_v$8","routeParamInfo","_$setAttribute","o","i","n","BaseTanStackRouterDevtoolsPanel","isOpen","setIsOpen","handleDragStart","shadowDOMTarget","panelProps","onCloseClick","useDevtoolsOnClose","style","otherPanelProps","invariant","showMatches","setShowMatches","useLocalStorage","activeMatch","cachedMatches","hasSearch","Object","keys","location","search","explorerState","state","routerExplorerValue","fromEntries","multiSortBy","dd","key","filter","includes","activeMatchLoaderData","loaderData","activeMatchValue","locationSearchValue","_el$13","_tmpl$4","_el$14","_el$15","_el$16","_el$17","_el$18","_el$19","_el$20","_el$21","_el$22","_el$24","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_$spread","devtoolsPanel","_el$32","dragHandle","onClick","Explorer","label","value","defaultExpanded","context","options","filterSubEntries","subEntries","_c$2","maskedLocation","_el$33","_tmpl$5","_el$34","_v$27","maskedBadgeContainer","_v$28","maskedBadge","pathname","_c$3","_el$35","_tmpl$6","_c$4","routeTree","_el$36","_el$37","_tmpl$7","_el$38","_el$39","_v$29","_v$30","matchRow","_v$31","getStatusColor","_v$32","matchID","_c$5","_el$40","_tmpl$8","_el$41","_el$42","_el$43","_el$44","_el$45","_el$46","_el$47","_v$36","_v$37","_v$38","_v$39","_v$33","cachedMatchesContainer","_v$34","detailsHeader","_v$35","detailsHeaderInfo","_c$6","status","_el$48","_tmpl$9","_el$49","_el$50","_el$51","_el$52","_el$53","_el$54","_el$55","_el$56","_el$57","_el$58","_el$59","_el$60","_el$61","_el$62","_el$63","_el$64","_el$65","_c$8","isFetching","_c$9","_c$10","updatedAt","Date","toLocaleTimeString","_c$11","_el$66","_tmpl$10","_el$67","detailsContent","_v$40","thirdContainer","_v$41","_v$42","matchDetails","_v$43","matchStatus","_v$44","matchDetailsInfoLabel","_v$45","matchDetailsInfo","_v$46","_v$47","_v$48","_v$49","_v$50","_v$51","s","h","l","u","_c$7","_el$68","_tmpl$11","_el$69","_el$70","reduce","obj","next","_v$52","fourthContainer","_v$53","_v$54","_v$9","panelCloseBtn","_v$10","panelCloseBtnIcon","_v$11","firstContainer","_v$12","row","_v$13","routerExplorerContainer","_v$14","routerExplorer","_v$15","secondContainer","_v$16","matchesContainer","_v$17","_v$18","_v$19","_v$20","routeMatchesToggle","_v$21","_v$22","routeMatchesToggleBtn","_v$23","_v$24","_v$25","_v$26","routesContainer","c","disabled","w","m","f","y","g","_$delegateEvents"],"mappings":";;;;;;;;;;;;;;AAuDA,SAASA,KAAKC,OAAY;AAClB,QAAA;AAAA,IAAEC;AAAAA,IAAW,GAAGC;AAAAA,EAAAA,IAASF;AAC/B,QAAMG,SAASC,UAAAA,UAAU;AACzB,UAAA,MAAA;AAAA,QAAAC,OAAAC,OAAA,GAAAC,QAAAF,KAAAG,YAAAC,QAAAF,MAAAG;AAAAL,eAAAA,MAAAM,eACcT,MAAI;AAAA,MAAA,KAAA,OAAA,IAAA;AAAA,eAASU,KAAAA,KAAGT,SAASU,MAAMZ,YAAYA,cAAc,EAAE;AAAA,MAAA;AAAA,IAAC,CAAA,GAAA,OAAA,IAAA;AAAAa,QAAAA,OAAAC,CAAA,QAAA;AAAA,UAAAC,MAC1Db,OAAO,EAAEc,cAAYC,OACrBf,SAASgB;AAAUH,cAAAD,IAAAK,KAAAC,IAAAA,UAAAd,OAAAQ,IAAAK,IAAAJ,GAAA;AAAAE,eAAAH,IAAAO,KAAAD,IAAAA,UAAAZ,OAAAM,IAAAO,IAAAJ,IAAA;AAAAH,aAAAA;AAAAA,IAAAA,GAAA;AAAA,MAAAK,GAAAG;AAAAA,MAAAD,GAAAC;AAAAA,IAAAA,CAAA;AAAAlB,WAAAA;AAAAA,EAAAA,GAAA;AAGrC;AAEA,SAASmB,UAAU;AAAA,EACjBC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AA4BF,GAAG;AACD,QAAM3B,SAASC,UAAAA,UAAU;AACnB2B,QAAAA,UAAUC,QAAAA,WACd,MAAMP,cAAcQ,kBAAkBR,cAAcM,OACtD;AACA,QAAMG,QAAQF,QAAAA,WAAW,MACvBP,YAAAA,EAAcM,QAAQI,KAAMC,CAAAA,MAAMA,EAAEC,YAAYV,MAAMW,EAAE,CAC1D;AAEMC,QAAAA,QAAQP,QAAAA,WAAW,MAAM;;AACzB,QAAA;AACEE,WAAAA,iBAAAA,mBAASM,QAAQ;AACbC,cAAAA,KAAIP,iBAAAA,mBAASM;AACnB,cAAME,IAAYf,MAAMgB,QAAQC,WAAAA,SAASjB,MAAMW,EAAE;AAC7CI,YAAAA,EAAEG,WAAW,GAAG,GAAG;AACfC,gBAAAA,UAAUJ,EAAEK,MAAM,CAAC;AAErBN,cAAAA,EAAEK,OAAO,GAAG;AACP,mBAAA,IAAIL,EAAEK,OAAO,CAAC;AAAA,UAAA;AAAA,QACvB;AAAA,MACF;AAEK,aAAA;AAAA,aACAE,OAAO;AACP,aAAA;AAAA,IAAA;AAAA,EACT,CACD;AAED,UAAA,MAAA;AAAAC,QAAAA,QAAAC,WAAAC,QAAAF,MAAAzC,YAAA4C,QAAAD,MAAA3C,YAAA6C,QAAAD,MAAA1C,aAAA4C,QAAAD,MAAA7C,YAAA+C,QAAAD,MAAA9C,YAAAgD,SAAAD,MAAA/C,YAAAiD,SAAAF,MAAA7C;AAAAyC,UAAAO,UAKe,MAAM;AACb,UAAIxB,SAAS;AACXJ,oBAAYD,eAAeF,MAAMW,KAAK,KAAKX,MAAMW,EAAE;AAAA,MAAA;AAAA,IAEvD;AAACiB,QAAAA,OAAAA,OAAA,MAaM3B,SAAS+B,yBAAchC,MAAMgB,QAAQC,oBAASjB,MAAMW,EAAE,GAACkB,MAAA;AAAAI,QAAAA,OAAAH,QAEnBlB,KAAK;AAAAc,eAAAA,OAAAQ,oBAE7CC,qBAAS;AAAA,MAAA,IAAC5B,QAAK;AAAA,eAAEA,MAAM;AAAA,MAAC;AAAA,MAAER;AAAAA,IAAc,CAAA,GAAA,IAAA;AAAAkC,QAAAA,OAAAX,QAAA,MAAA;AAAA,UAAAc,MAAAC,IAAAA,KAAA,MAAA;;AAAA,gBAAA,GAG5CrC,WAAMsC,aAANtC,mBAAgBuC;AAAAA,OAAM;AAAA,aAAA,MAAtBH,IAAA,KAAA,MAAA;AAAA,YAAAI,SAAAC,QAAA;AAAAD,mBAAAA,QAEI,MAAA,CAAC,GAAIxC,MAAMsC,QAA4B,EACrCI,KAAK,CAACC,GAAGC,MAAM;AACPD,iBAAAA,EAAEE,OAAOD,EAAEC;AAAAA,QACnB,CAAA,EACAC,IAAK/B,CAAAA,MAACmB,IAAAA,gBACJrC,WAAS;AAAA,UACRC;AAAAA,UACAC;AAAAA,UACAC,OAAOe;AAAAA,UACPb;AAAAA,UACAC;AAAAA,QAAwB,CAAA,CAE3B,CAAC;AAAAT,mBAAAA,MAAAA,IAAA8C,UAAAA,QAbMhE,OAAO,EAAEuE,eAAe,CAAC,CAAC9C,MAAM,CAAC,CAAA;AAAAuC,eAAAA;AAAAA,aAe3C;AAAA,IAAI,GAAA,GAAA,IAAA;AAAArD,QAAAA,OAAAC,CAAA,QAAA;AAAA4D,UAAAA,OAzCM,0BAA0BhD,MAAMW,EAAE,IAAEsC,OAMzChE,KAAAA,KACLT,OAAO,EAAE0E,mBAAmBlD,MAAMW,OAAOT,SAAS,GAAG,CAAC,CAACK,MAAAA,CAAO,CAChE,GAAC4C,OAGQlE,KAAAA,KACLT,OAAO,EAAE4E,eAAeC,MAAoBjD,oBAAAA,QAAAA,GAAWJ,KAAK,CAAC,CAC/D,GAACsD,OAESrE,UAAGT,SAAS+E,UAAU,CAAC,CAAChD,MAAAA,CAAO,CAAC,GAACiD,OAE5BhF,OAASiF,EAAAA,MAAIC,OAGblF,OAAAA,EAASmF;AAAcX,eAAA5D,IAAAK,KAAAmE,IAAAA,aAAApC,OAAApC,cAAAA,IAAAK,IAAAuD,IAAA;AAAAC,eAAA7D,IAAAO,KAAAD,IAAAA,UAAA8B,OAAApC,IAAAO,IAAAsD,IAAA;AAAAE,eAAA/D,IAAAuD,KAAAjD,IAAAA,UAAA+B,OAAArC,IAAAuD,IAAAQ,IAAA;AAAAG,eAAAlE,IAAAyE,KAAAnE,IAAAA,UAAAgC,OAAAtC,IAAAyE,IAAAP,IAAA;AAAAE,eAAApE,IAAA0E,KAAApE,IAAAA,UAAAkC,OAAAxC,IAAA0E,IAAAN,IAAA;AAAAE,eAAAtE,IAAA2E,KAAArE,IAAAA,UAAAoC,QAAA1C,IAAA2E,IAAAL,IAAA;AAAAtE,aAAAA;AAAAA,IAAAA,GAAA;AAAA,MAAAK,GAAAG;AAAAA,MAAAD,GAAAC;AAAAA,MAAA+C,GAAA/C;AAAAA,MAAAiE,GAAAjE;AAAAA,MAAAkE,GAAAlE;AAAAA,MAAAmE,GAAAnE;AAAAA,IAAAA,CAAA;AAAA0B,WAAAA;AAAAA,EAAAA,GAAA;AAwBhD;AAEa0C,MAAAA,kCACX,SAASA,iCAAgC;AAAA,EACvC,GAAG3F;AACqB,GAAgB;AAClC,QAAA;AAAA,IACJ4F,SAAS;AAAA,IACTC;AAAAA,IACAC;AAAAA,IACApE;AAAAA,IACAD;AAAAA,IACAsE;AAAAA,IACA,GAAGC;AAAAA,EAAAA,IACDhG;AAEE,QAAA;AAAA,IAAEiG;AAAAA,MAAiBC,2BAAmB;AAC5C,QAAM/F,SAASC,UAAAA,UAAU;AACnB,QAAA;AAAA,IAAEH;AAAAA,IAAWkG;AAAAA,IAAO,GAAGC;AAAAA,EAAAA,IAAoBJ;AAEjDK,YACE3E,QACA,8KACF;AAIA,QAAM,CAAC4E,aAAaC,cAAc,IAAIC,gBACpC,qCACA,IACF;AAEA,QAAM,CAAC3E,UAAUC,WAAW,IAAI0E,gBAC9B,uCACA,EACF;AAEMC,QAAAA,cAAczE,QAAAA,WAAW,MAAM;AACnC,UAAMD,UAAU,CACd,GAAIN,YAAAA,EAAcQ,kBAAkB,CAAA,GACpC,GAAGR,YAAcM,EAAAA,SACjB,GAAGN,YAAAA,EAAciF,aAAa;AAEzB3E,WAAAA,QAAQI,KACZC,CAAAA,MAAMA,EAAEC,YAAYR,cAAcO,EAAEE,OAAOT,SAAAA,CAC9C;AAAA,EAAA,CACD;AAEK8E,QAAAA,YAAY3E,mBAChB,MAAM4E,OAAOC,KAAKpF,cAAcqF,SAASC,MAAM,EAAE7C,MACnD;AAEM8C,QAAAA,gBAAgBhF,QAAAA,WAAW,MAAM;AAC9B,WAAA;AAAA,MACL,GAAGN,OAAO;AAAA,MACVuF,OAAOxF,YAAY;AAAA,IACrB;AAAA,EAAA,CACD;AAED,QAAMyF,sBAAsBlF,QAAAA,WAAW,MACrC4E,OAAOO,YACLC,MAAAA,YACER,OAAOC,KAAKG,cAAe,CAAA,GAEzB,CACE,SACA,cACA,gBACA,cACA,WACA,UAAU,EAEZvC,IAAKrC,CAAOiF,MAAAA,CAAAA,OAAOA,OAAOjF,CAAC,CAC/B,EACGqC,IAAK6C,CAAAA,QAAQ,CAACA,KAAMN,cAAAA,EAAwBM,GAAG,CAAC,CAAC,EACjDC,OACEnF,CACC,MAAA,OAAOA,EAAE,CAAC,MAAM,cAChB,CAAC,CACC,WACA,YACA,gBACA,eACA,qBACA,mBACA,mBACA,mBACA,kBACA,aACA,SAAS,EACToF,SAASpF,EAAE,CAAC,CAAC,CACnB,CACJ,CACF;AACA,QAAMqF,wBAAwBzF,QAAAA,WAAW;;AAAMyE,6BAAAA,MAAAA,mBAAeiB;AAAAA,GAAU;AACxE,QAAMC,mBAAmB3F,QAAAA,WAAW,MAAMyE,aAAa;AACvD,QAAMmB,sBAAsB5F,QAAAA,WAAW,MAAMP,YAAY,EAAEqF,SAASC,MAAM;AAE1E,UAAA,MAAA;AAAAc,QAAAA,SAAAC,QAAA,GAAAC,SAAAF,OAAArH,YAAAwH,SAAAD,OAAAvH,YAAAyH,SAAAF,OAAArH,aAAAwH,SAAAD,OAAAzH,YAAA2H,SAAAD,OAAAxH,aAAA0H,SAAAD,OAAA3H,YAAA6H,SAAAJ,OAAAvH,aAAA4H,SAAAD,OAAA7H,YAAA+H,SAAAD,OAAA9H;AAAA+H,WAAA/H;AAAAgI,QAAAA,SAAAD,OAAA7H,aAAA+H,SAAAD,OAAAhI,YAAAkI,SAAAF,OAAA9H,aAAAiI,SAAAD,OAAAlI,YAAAoI,SAAAD,OAAAnI,YAAAqI,SAAAD,OAAAlI,aAAAoI,SAAAH,OAAAjI,aAAAqI,SAAAL,OAAAhI;AAAAsI,QAAAA,OAAAnB,QAAAlH,eAAA;AAAA,MAAA,KAAA,OAAA,IAAA;AAEWC,eAAAA,KAAAA,KACLT,SAAS8I,eACT,+BACAhJ,YAAYA,cAAc,EAC5B;AAAA,MAAC;AAAA,MAAA,IACDkG,QAAK;AAAEA,eAAAA,QAAQA,UAAU;AAAA,MAAA;AAAA,IAAE,GACvBC,eAAe,GAAA,OAAA,IAAA;AAAAyB,eAAAA,QAElB/B,mBAAe,MAAA;AAAA,UAAAoD,SAAA9E,QAAA;AAAA8E,UAAAA,iBAAAA,QAAA,aACgCpD,iBAAe,IAAA;AAAAhF,UAAAA,OAAA,MAAAO,IAAAA,UAAA6H,QAAjD/I,OAAO,EAAEgJ,UAAU,CAAA;AAAAD,aAAAA;AAAAA,IAAAA,GAC7B,IAAA,MAAInB,MAAA;AAAArE,WAAAA,UAGG,CAACtC,MAAW;AACnB,UAAIyE,WAAW;AACbA,kBAAU,KAAK;AAAA,MAAA;AAEjBI,mBAAa7E,CAAC;AAAA,IAChB;AAAC8G,eAAAA,QAAArE,oBAqBE9D,MAAI;AAAA,MAAA,eAAA;AAAA,MAEHqJ,SAASA,CAAChI,MAAW;AACnB,YAAIyE,WAAW;AACbA,oBAAU,KAAK;AAAA,QAAA;AAEjBI,qBAAa7E,CAAC;AAAA,MAAA;AAAA,IAChB,CAAC,CAAA;AAAAgH,eAAAA,QAAAvE,oBAKAwF,mBAAQ;AAAA,MACPC,OAAK;AAAA,MACLC,OAAOrC;AAAAA,MACPsC,iBAAiB;AAAA,QACfvC,OAAO,CAAC;AAAA,QACRwC,SAAS,CAAC;AAAA,QACVC,SAAS,CAAA;AAAA,MACX;AAAA,MACAC,kBAAmBC,CAAe,eAAA;AACzBA,eAAAA,WAAWrC,OAChB,CAACnF,MAAW,OAAOA,EAAEmH,YAAY,UACnC;AAAA,MAAA;AAAA,IACF,CAAC,CAAA;AAAA3F,QAAAA,OAAA2E,SAAA,MAAA;AAAAsB,UAAAA,OAAA7F,IAAAA,KASFvC,MAAAA,CAAAA,CAAAA,YAAY,EAAEqF,SAASgD,cAAc;AAAA,aAAA,MAArCD,KAAA,KAAA,MAAA;AAAA,YAAAE,SAAAC,QAAAA,GAAAC,SAAAF,OAAAvJ;AAAAM,YAAAA,OAAAC,CAAA,QAAA;AAAA,cAAAmJ,QACa/J,OAAO,EAAEgK,sBAAoBC,QAC1BjK,SAASkK;AAAWH,oBAAAnJ,IAAAK,KAAAC,IAAAA,UAAA0I,QAAAhJ,IAAAK,IAAA8I,KAAA;AAAAE,oBAAArJ,IAAAO,KAAAD,IAAAA,UAAA4I,QAAAlJ,IAAAO,IAAA8I,KAAA;AAAArJ,iBAAAA;AAAAA,QAAAA,GAAA;AAAA,UAAAK,GAAAG;AAAAA,UAAAD,GAAAC;AAAAA,QAAAA,CAAA;AAAAwI,eAAAA;AAAAA,aAEjC;AAAA,IAAI,GAAA,GAAA,IAAA;AAAAnG,QAAAA,OAAA6E,QAGDhH,MAAAA,YAAY,EAAEqF,SAASwD,QAAQ;AAAA1G,QAAAA,OAAA4E,SAAA,MAAA;AAAA+B,UAAAA,OAAAvG,IAAAA,KACrCvC,MAAAA,CAAAA,CAAAA,YAAY,EAAEqF,SAASgD,cAAc;AAAA,aAAA,MAArCS,KAAA,KAAA,MAAA;AAAA,YAAAC,SAAAC,QAAA;AAAA7G,YAAAA,OAAA4G,QAAA,MAEI/I;;AAAAA,mCAAcqF,EAAAA,SAASgD,mBAAvBrI,mBAAuC6I;AAAAA,SAAQ;AAAAxJ,YAAAA,OAAA,MAAAO,IAAAA,UAAAmJ,QADrCrK,OAAO,EAAE2J,cAAc,CAAA;AAAAU,eAAAA;AAAAA,aAGlC;AAAA,IAAI,GAAA,GAAA,IAAA;AAAA5B,WAAAlF,UAMK,MAAM;AACb6C,qBAAe,KAAK;AAAA,IACtB;AAACsC,WAAAnF,UAUQ,MAAM;AACb6C,qBAAe,IAAI;AAAA,IACrB;AAAC3C,QAAAA,OAAAmF,SAAA,MAAA;AAAA,UAAA2B,OAAA1G,iBAcJ,CAACsC,aAAa;AAAA,aAAA,MAAdoE,KAAAA,IAAA7G,IAAAA,gBACErC,WAAS;AAAA,QACRC;AAAAA,QACAC;AAAAA,QAAc,IACdC,QAAK;AAAA,iBAAED,OAASiJ,EAAAA;AAAAA,QAAS;AAAA,QACzB/I,QAAM;AAAA,QACNC;AAAAA,QACAC;AAAAA,MAAwB,CAAA,KAAA,MAAA;AAAA,YAAA8I,SAAAxG,QAAA;AAAAR,YAAAA,OAAAgH,QAIvB,MAAA;;AAACnJ,0CAAY,EAAEQ,mBAAdR,mBAA8ByC,UAC5BzC,YAAcQ,EAAAA,iBACdR,cAAcM,YAFhBN,mBAGCgD,IAAI,CAACvC,OAAYuD,MAAW;AAC7B,oBAAA,MAAA;AAAA,kBAAAoF,SAAAC,QAAA,GAAAC,SAAAF,OAAArK,YAAAwK,SAAAD,OAAArK;AAAAgD,qBAAAA,UAIa,MACP5B,YAAYD,SAAAA,MAAeK,MAAMI,KAAK,KAAKJ,MAAMI,EAAE;AAAC0I,kBAAAA,OAAAA,QAYpD,MAAA,GAAG9I,MAAMG,YAAYsB,WAAcA,cAAAA,yBAAczB,MAAMoI,QAAQ,EAAE;AAAAO,yBAAAA,QAAAhH,oBAClEC,qBAAS;AAAA,gBAAC5B;AAAAA,gBAAcR;AAAAA,cAAc,CAAA,GAAA,IAAA;AAAAZ,kBAAAA,OAAAC,CAAA,QAAA;AAAAkK,oBAAAA,QAf3B,0BAA0B/I,MAAMI,EAAE,IAAE4I,QAIzCtK,UAAGT,SAASgL,SAASjJ,UAAUuE,aAAa,CAAC,GAAC2E,QAG5CxK,UACLT,OAAO,EAAE4E,eAAesG,qBAAenJ,KAAK,CAAC,CAC/C,GAACoJ,QAIMnL,OAASoL,EAAAA;AAAON,0BAAAlK,IAAAK,KAAAmE,IAAAA,aAAAsF,QAAA9J,cAAAA,IAAAK,IAAA6J,KAAA;AAAAC,0BAAAnK,IAAAO,KAAAD,IAAAA,UAAAwJ,QAAA9J,IAAAO,IAAA4J,KAAA;AAAAE,0BAAArK,IAAAuD,KAAAjD,IAAAA,UAAA0J,QAAAhK,IAAAuD,IAAA8G,KAAA;AAAAE,0BAAAvK,IAAAyE,KAAAnE,IAAAA,UAAA2J,QAAAjK,IAAAyE,IAAA8F,KAAA;AAAAvK,uBAAAA;AAAAA,cAAAA,GAAA;AAAA,gBAAAK,GAAAG;AAAAA,gBAAAD,GAAAC;AAAAA,gBAAA+C,GAAA/C;AAAAA,gBAAAiE,GAAAjE;AAAAA,cAAAA,CAAA;AAAAsJ,qBAAAA;AAAAA,YAAAA,GAAA;AAAA,UAAA;AAAA,SAK7B;AAAAD,eAAAA;AAAAA,MAAAA,GAEL;AAAA,IAAA,IAAA;AAAAhH,QAAAA,OAAAyE,SAAA,MAAA;AAAAmD,UAAAA,OAAAxH,IAAAA,KAGJvC,MAAAA,CAAAA,CAAAA,YAAY,EAAEiF,cAAcxC,MAAM;AAAA,aAAA,MAAlCsH,KAAA,KAAA,MAAA;AAAA,YAAAC,SAAAC,QAAAC,GAAAA,SAAAF,OAAAjL,YAAAoL,SAAAD,OAAAnL,YAAAqL,SAAAD,OAAAlL,aAAAoL,SAAAH,OAAAjL;AAAAkD,YAAAA,OAAAkI,QASMrK,MAAAA,YAAAA,EAAciF,cAAcjC,IAAI,CAACvC,UAAe;AAC/C,kBAAA,MAAA;AAAA,gBAAA6J,SAAAjB,QAAA,GAAAkB,SAAAD,OAAAvL,YAAAyL,SAAAD,OAAAtL;AAAAgD,mBAAAA,UAIa,MACP5B,YAAYD,SAAAA,MAAeK,MAAMI,KAAK,KAAKJ,MAAMI,EAAE;AAACsB,gBAAAA,OAAAqI,QAAA,MAUtB,GAAG/J,MAAMI,EAAE,EAAE;AAAAyJ,uBAAAA,QAAAlI,oBAE5CC,qBAAS;AAAA,cAAC5B;AAAAA,cAAcR;AAAAA,YAAc,CAAA,GAAA,IAAA;AAAAZ,gBAAAA,OAAAC,CAAA,QAAA;AAAAmL,kBAAAA,QAd3B,0BAA0BhK,MAAMI,EAAE,IAAE6J,QAIzCvL,UAAGT,SAASgL,SAASjJ,UAAUuE,aAAa,CAAC,GAAC2F,QAG5CxL,UACLT,OAAO,EAAE4E,eAAesG,qBAAenJ,KAAK,CAAC,CAC/C,GAACmK,QAGUlM,OAASoL,EAAAA;AAAOW,wBAAAnL,IAAAK,KAAAmE,IAAAA,aAAAwG,QAAAhL,cAAAA,IAAAK,IAAA8K,KAAA;AAAAC,wBAAApL,IAAAO,KAAAD,IAAAA,UAAA0K,QAAAhL,IAAAO,IAAA6K,KAAA;AAAAC,wBAAArL,IAAAuD,KAAAjD,IAAAA,UAAA2K,QAAAjL,IAAAuD,IAAA8H,KAAA;AAAAC,wBAAAtL,IAAAyE,KAAAnE,IAAAA,UAAA4K,QAAAlL,IAAAyE,IAAA6G,KAAA;AAAAtL,qBAAAA;AAAAA,YAAAA,GAAA;AAAA,cAAAK,GAAAG;AAAAA,cAAAD,GAAAC;AAAAA,cAAA+C,GAAA/C;AAAAA,cAAAiE,GAAAjE;AAAAA,YAAAA,CAAA;AAAAwK,mBAAAA;AAAAA,UAAAA,GAAA;AAAA,QAAA,CAKlC,CAAC;AAAAjL,YAAAA,OAAAC,CAAA,QAAA;AAAAuL,cAAAA,QA7BMnM,SAASoM,wBAAsBC,QAC7BrM,OAASsM,EAAAA,eAAaC,QAEpBvM,OAAAA,EAASwM;AAAiBL,oBAAAvL,IAAAK,KAAAC,IAAAA,UAAAoK,QAAA1K,IAAAK,IAAAkL,KAAA;AAAAE,oBAAAzL,IAAAO,KAAAD,IAAAA,UAAAsK,QAAA5K,IAAAO,IAAAkL,KAAA;AAAAE,oBAAA3L,IAAAuD,KAAAjD,IAAAA,UAAAwK,QAAA9K,IAAAuD,IAAAoI,KAAA;AAAA3L,iBAAAA;AAAAA,QAAAA,GAAA;AAAA,UAAAK,GAAAG;AAAAA,UAAAD,GAAAC;AAAAA,UAAA+C,GAAA/C;AAAAA,QAAAA,CAAA;AAAAkK,eAAAA;AAAAA,aA6BxC;AAAA,IAAI,GAAA,GAAA,IAAA;AAAA7H,QAAAA,OAAAiE,SAAA,MAAA;AAAA+E,UAAAA,OAAA5I,SAAA;;AAAA,gBAAA,EAETyC,YAAY,OAAKA,iBAAY,MAAZA,mBAAeoG;AAAAA,OAAM;AAAA,aAAA,MAAtCD,KAAA,KAAA,MAAA;AAAAE,YAAAA,SAAAC,WAAAC,SAAAF,OAAAtM,YAAAyM,SAAAD,OAAAtM,aAAAwM,SAAAD,OAAAzM,YAAA2M,SAAAD,OAAA1M,YAAA4M,SAAAD,OAAA3M,YAAA6M,SAAAF,OAAAzM,aAAA4M,SAAAD,OAAA7M,YAAA+M,SAAAD,OAAA5M,aAAA8M,SAAAD,OAAA/M,YAAAiN,SAAAJ,OAAA3M,aAAAgN,SAAAD,OAAAjN,YAAAmN,SAAAD,OAAAhN,aAAAkN,SAAAH,OAAA/M,aAAAmN,SAAAD,OAAApN,YAAAsN,SAAAD,OAAAnN,aAAAqN,SAAAd,OAAAvM,aAAAsN,SAAAD,OAAArN;AAAAkD,YAAAA,OAAAwJ,SAAA,MAAA;AAAAa,cAAAA,OAAAjK,IAAAA,KAYYyC,MAAAA;;AAAAA,oBAAAA,IAAAA,iBAAY,MAAZA,mBAAeoG,YAAW,eAC3BpG,uBAAAA,mBAAeyH;AAAAA,WAAU;AAAA,iBADxBD,MAAAA;;AAAAA,wBAEG,IAAA,cACAxH,iBAAeoG,MAAfpG,mBAAeoG;AAAAA;AAAAA,QAAAA,IAAM;AAAAjJ,YAAAA,OAAA4J,QAAA;;AAMlB/G,mCAAY,MAAZA,mBAAenE;AAAAA,SAAE;AAAAsB,YAAAA,OAAA+J,SAAA,MAAA;AAAA,cAAAQ,OAAAnK,IAMvBvC,KAAAA,MAAAA;;AAAAA,oBAAAA,GAAAA,iBAAcQ,EAAAA,mBAAdR,mBAA8BU,KAC7B,CAACC,MAAWA;;AAAAA,uBAAEE,SAAOmE,MAAAA,YAAY,MAAZA,gBAAAA,IAAenE;AAAAA;AAAAA,WACrC;AAAA,iBAAA,MAFA6L,KAAA,IAGG,YACA1M,cAAcM,QAAQI,KAClB,CAACC,MAAWA;;AAAAA,qBAAEE,SAAOmE,iBAAenE,MAAfmE,mBAAenE;AAAAA,WACtC,IACA,WACA;AAAA,QAAA,IAAQ;AAAAsB,YAAAA,OAAAkK,SAAA,MAAA;AAAA,cAAAM,QAAApK,IAAAA,KAAA,MAAA;;AAAA,oBAAA,GAMbyC,iBAAAA,MAAAA,mBAAe4H;AAAAA,WAAS;AAAA,iBAAA,MAAxBD;;AAAAA,yBACG,IAAA,IAAIE,MAAK7H,uBAAAA,mBAAe4H,SAAS,EAAEE,mBAAAA,IACnC;AAAA;AAAA,QAAA,IAAK;AAAA3K,YAAAA,OAAAkJ,SAAA,MAAA;AAAA,cAAA0B,QAAAxK,IAKhByD,KAAAA,MAAAA,CAAAA,CAAAA,uBAAuB;AAAA,iBAAA,MAAvB+G,UAAA,EAAA,MAAA;AAAA,gBAAAC,SAAAC,SAAA;AAAA5N,gBAAAA,OAAA,MAAAO,IAAAA,UAAAoN,QAEetO,OAAO,EAAEsM,aAAa,CAAA;AAAAgC,mBAAAA;AAAAA,UAAA,GAAA,IAAA,MAAA;AAAA,gBAAAE,SAAAvK,QAAA;AAAAuK,uBAAAA,QAAA9K,oBAE/BwF,mBAAQ;AAAA,cACPC,OAAK;AAAA,cACLC,OAAO9B;AAAAA,cACP+B,iBAAiB,CAAA;AAAA,YAAC,CAAC,CAAA;AAAA1I,gBAAAA,OAAA,MAAAO,IAAAA,UAAAsN,QAJXxO,OAAO,EAAEyO,cAAc,CAAA;AAAAD,mBAAAA;AAAAA,UAAA,GAAA,CAAA,IAQnC;AAAA,QAAI,GAAA,GAAAZ,MAAA;AAAAC,mBAAAA,QAAAnK,oBAGLwF,mBAAQ;AAAA,UACPC,OAAK;AAAA,UACLC,OAAO5B;AAAAA,UACP6B,iBAAiB,CAAA;AAAA,QAAC,CAAC,CAAA;AAAA1I,YAAAA,OAAAC,CAAA,QAAA;;AAAA8N,cAAAA,QAhEb1O,SAAS2O,gBAAcC,QACrB5O,OAASsM,EAAAA,eAAauC,QAEpB7O,OAAAA,EAAS8O,cAAYC,QAEtB/O,SAASgP,aACd1I,iBAAAA,MAAAA,mBAAeoG,SACfpG,iBAAeyH,MAAfzH,mBAAeyH,UACjB,GAACkB,QASSjP,OAAO,EAAEkP,uBAAqBC,QAE5BnP,SAASoP,kBAAgBC,QAI3BrP,SAASkP,uBAAqBI,QAE5BtP,OAAO,EAAEoP,kBAAgBG,QAY3BvP,SAASkP,uBAAqBM,QAE5BxP,OAASoP,EAAAA,kBAAgBK,QAoB/BzP,OAAAA,EAASsM,eAAaoD,QACtB1P,OAASyO,EAAAA;AAAcC,oBAAA9N,IAAAK,KAAAC,IAAAA,UAAAyL,QAAA/L,IAAAK,IAAAyN,KAAA;AAAAE,oBAAAhO,IAAAO,KAAAD,IAAAA,UAAA2L,QAAAjM,IAAAO,IAAAyN,KAAA;AAAAC,oBAAAjO,IAAAuD,KAAAjD,IAAAA,UAAA6L,QAAAnM,IAAAuD,IAAA0K,KAAA;AAAAE,oBAAAnO,IAAAyE,KAAAnE,IAAAA,UAAA8L,QAAApM,IAAAyE,IAAA0J,KAAA;AAAAE,oBAAArO,IAAA0E,KAAApE,IAAAA,UAAAgM,QAAAtM,IAAA0E,IAAA2J,KAAA;AAAAE,oBAAAvO,IAAA2E,KAAArE,IAAAA,UAAAkM,QAAAxM,IAAA2E,IAAA4J,KAAA;AAAAE,oBAAAzO,IAAA+O,KAAAzO,IAAAA,UAAAoM,QAAA1M,IAAA+O,IAAAN,KAAA;AAAAC,oBAAA1O,IAAAgP,KAAA1O,IAAAA,UAAAsM,QAAA5M,IAAAgP,IAAAN,KAAA;AAAAC,oBAAA3O,IAAA2B,KAAArB,IAAAA,UAAAuM,QAAA7M,IAAA2B,IAAAgN,KAAA;AAAAC,oBAAA5O,IAAAqB,KAAAf,IAAAA,UAAAyM,QAAA/M,IAAAqB,IAAAuN,KAAA;AAAAC,oBAAA7O,IAAAiP,KAAA3O,IAAAA,UAAA0M,QAAAhN,IAAAiP,IAAAJ,KAAA;AAAAC,oBAAA9O,IAAAkP,KAAA5O,IAAAA,UAAA2M,QAAAjN,IAAAkP,IAAAJ,KAAA;AAAA9O,iBAAAA;AAAAA,QAAAA,GAAA;AAAA,UAAAK,GAAAG;AAAAA,UAAAD,GAAAC;AAAAA,UAAA+C,GAAA/C;AAAAA,UAAAiE,GAAAjE;AAAAA,UAAAkE,GAAAlE;AAAAA,UAAAmE,GAAAnE;AAAAA,UAAAuO,GAAAvO;AAAAA,UAAAwO,GAAAxO;AAAAA,UAAAmB,GAAAnB;AAAAA,UAAAa,GAAAb;AAAAA,UAAAyO,GAAAzO;AAAAA,UAAA0O,GAAA1O;AAAAA,QAAAA,CAAA;AAAAuL,eAAAA;AAAAA,aAQnC;AAAA,IAAI,GAAA,GAAA,IAAA;AAAAlJ,QAAAA,OAAAiE,SAAA,MAAA;AAAA,UAAAqI,OAAAlM,IACP2C,KAAAA,MAAAA,CAAAA,CAAAA,WAAW;AAAA,aAAA,MAAXuJ,KAAA,KAAA,MAAA;AAAA,YAAAC,SAAAC,SAAA,GAAAC,SAAAF,OAAA3P,YAAA8P,SAAAD,OAAA3P;AAAA4P,mBAAAA,QAAAzM,oBAIMwF,mBAAQ;AAAA,UACPE,OAAO3B;AAAAA,UAAmB,IAC1B4B,kBAAe;AAAE5C,mBAAAA,OAAOC,KACtBpF,cAAcqF,SAASC,MACzB,EAAEwJ,OAAO,CAACC,KAAUC,SAAS;AACvBA,kBAAAA,IAAI,IAAI,CAAC;AACND,qBAAAA;AAAAA,YACT,GAAG,EAAE;AAAA,UAAA;AAAA,QAAC,CAAA,CAAA;AAAA1P,YAAAA,OAAAC,CAAA,QAAA;AAAA2P,cAAAA,QAVAvQ,SAASwQ,iBAAeC,QACtBzQ,OAASsM,EAAAA,eAAaoE,QACtB1Q,OAAAA,EAASyO;AAAc8B,oBAAA3P,IAAAK,KAAAC,IAAAA,UAAA8O,QAAApP,IAAAK,IAAAsP,KAAA;AAAAE,oBAAA7P,IAAAO,KAAAD,IAAAA,UAAAgP,QAAAtP,IAAAO,IAAAsP,KAAA;AAAAC,oBAAA9P,IAAAuD,KAAAjD,IAAAA,UAAAiP,QAAAvP,IAAAuD,IAAAuM,KAAA;AAAA9P,iBAAAA;AAAAA,QAAAA,GAAA;AAAA,UAAAK,GAAAG;AAAAA,UAAAD,GAAAC;AAAAA,UAAA+C,GAAA/C;AAAAA,QAAAA,CAAA;AAAA4O,eAAAA;AAAAA,aAYnC;AAAA,IAAI,GAAA,GAAA,IAAA;AAAArP,QAAAA,OAAAC,CAAA,QAAA;AAAA,UAAA+P,OA3QC3Q,SAAS4Q,eAAaC,QAcpB7Q,SAAS8Q,mBAAiBC,QAWzB/Q,OAAO,EAAEgR,gBAAcC,QACrBjR,SAASkR,KAAGC,QAWZnR,SAASoR,yBAAuBC,QAC9BrR,SAASsR,gBAAcC,QAkB3BvR,SAASwR,iBAAeC,QACtBzR,OAAO,EAAE0R,kBAAgBC,QACvB3R,SAASsM,eAAasF,QAQtB5R,SAASyO,gBAAcoD,QAQvB7R,OAAO,EAAEsM,eAAawF,QACpB9R,SAAS+R,oBAAkBC,QAMzB,CAAC7L,eAAa8L,QACjBxR,KAAAA,KACLT,OAAO,EAAEkS,sBAAsB,CAAC/L,eAAe,IAAI,CACrD,GAACgM,QASShM,YAAAA,GAAaiM,QAChB3R,KAAAA,KACLT,OAAO,EAAEkS,sBAAsB,CAAC,CAAC/L,eAAe,KAAK,CACvD,GAACkM,QAKOrS,SAASwM,mBAAiB8F,QAI5B7R,UAAGT,SAASuS,eAAe;AAAC5B,eAAA/P,IAAAK,KAAAC,IAAAA,UAAA0G,QAAAhH,IAAAK,IAAA0P,IAAA;AAAAE,gBAAAjQ,IAAAO,KAAAiE,IAAAA,aAAAyC,QAAAjH,SAAAA,IAAAO,IAAA0P,KAAA;AAAAE,gBAAAnQ,IAAAuD,KAAAjD,IAAAA,UAAA4G,QAAAlH,IAAAuD,IAAA4M,KAAA;AAAAE,gBAAArQ,IAAAyE,KAAAnE,IAAAA,UAAA6G,QAAAnH,IAAAyE,IAAA4L,KAAA;AAAAE,gBAAAvQ,IAAA0E,KAAApE,IAAAA,UAAA8G,QAAApH,IAAA0E,IAAA6L,KAAA;AAAAE,gBAAAzQ,IAAA2E,KAAArE,IAAAA,UAAA+G,QAAArH,IAAA2E,IAAA8L,KAAA;AAAAE,gBAAA3Q,IAAA+O,KAAAzO,IAAAA,UAAAgH,QAAAtH,IAAA+O,IAAA4B,KAAA;AAAAE,gBAAA7Q,IAAAgP,KAAA1O,IAAAA,UAAAiH,QAAAvH,IAAAgP,IAAA6B,KAAA;AAAAE,gBAAA/Q,IAAA2B,KAAArB,IAAAA,UAAAkH,QAAAxH,IAAA2B,IAAAoP,KAAA;AAAAC,gBAAAhR,IAAAqB,KAAAf,IAAAA,UAAAmH,QAAAzH,IAAAqB,IAAA2P,KAAA;AAAAC,gBAAAjR,IAAAiP,KAAA3O,IAAAA,UAAAqH,QAAA3H,IAAAiP,IAAAgC,KAAA;AAAAC,gBAAAlR,IAAAkP,KAAA5O,IAAAA,UAAAsH,QAAA5H,IAAAkP,IAAAgC,KAAA;AAAAE,gBAAApR,IAAA4R,MAAA/J,OAAAgK,WAAA7R,IAAA4R,IAAAR;AAAAC,gBAAArR,IAAA8R,KAAAxR,IAAAA,UAAAuH,QAAA7H,IAAA8R,IAAAT,KAAA;AAAAE,gBAAAvR,IAAA+R,MAAAjK,OAAA+J,WAAA7R,IAAA+R,IAAAR;AAAAC,gBAAAxR,IAAAgS,KAAA1R,IAAAA,UAAAwH,QAAA9H,IAAAgS,IAAAR,KAAA;AAAAC,gBAAAzR,IAAAiS,KAAA3R,IAAAA,UAAAyH,QAAA/H,IAAAiS,IAAAR,KAAA;AAAAC,gBAAA1R,IAAAkS,KAAA5R,IAAAA,UAAA0H,QAAAhI,IAAAkS,IAAAR,KAAA;AAAA1R,aAAAA;AAAAA,IAAAA,GAAA;AAAA,MAAAK,GAAAG;AAAAA,MAAAD,GAAAC;AAAAA,MAAA+C,GAAA/C;AAAAA,MAAAiE,GAAAjE;AAAAA,MAAAkE,GAAAlE;AAAAA,MAAAmE,GAAAnE;AAAAA,MAAAuO,GAAAvO;AAAAA,MAAAwO,GAAAxO;AAAAA,MAAAmB,GAAAnB;AAAAA,MAAAa,GAAAb;AAAAA,MAAAyO,GAAAzO;AAAAA,MAAA0O,GAAA1O;AAAAA,MAAAoR,GAAApR;AAAAA,MAAAsR,GAAAtR;AAAAA,MAAAuR,GAAAvR;AAAAA,MAAAwR,GAAAxR;AAAAA,MAAAyR,GAAAzR;AAAAA,MAAA0R,GAAA1R;AAAAA,IAAAA,CAAA;AAAAsG,WAAAA;AAAAA,EAAAA,GAAA;AAqKlD;AAE4CqL,IAAAA,eAAA,CAAA,SAAA,WAAA,CAAA;;;"}